<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classmlir_1_1Pattern.html" title="Instances of Pattern can be matched against SSA IR. " alt="" coords="5,1142,99,1169"/>
<area shape="rect" id="node2" href="$classmlir_1_1RewritePattern.html" title="RewritePattern is the common base class for all DAG to DAG replacements. " alt="" coords="147,1142,285,1169"/>
<area shape="rect" id="node3" href="$structEraseDeadLinalgOp.html" title="EraseDeadLinalgOp" alt="" coords="357,602,496,629"/>
<area shape="rect" id="node4" href="$classmlir_1_1ConversionPattern.html" title="Base class for the conversion patterns. " alt="" coords="347,653,506,679"/>
<area shape="rect" id="node28" href="$structmlir_1_1linalg_1_1LinalgBaseInterchangePattern.html" title="Linalg interchange patterns. " alt="" coords="350,808,503,849"/>
<area shape="rect" id="node30" href="$structmlir_1_1linalg_1_1LinalgBasePromotionPattern.html" title="Linalg promotion patterns. " alt="" coords="350,873,503,915"/>
<area shape="rect" id="node32" href="$structmlir_1_1linalg_1_1LinalgBaseTilingPattern.html" title="mlir::linalg::LinalgBase\lTilingPattern" alt="" coords="350,939,503,980"/>
<area shape="rect" id="node34" href="$structmlir_1_1linalg_1_1LinalgBaseVectorizationPattern.html" title="Linalg vectorization patterns. " alt="" coords="350,1004,503,1045"/>
<area shape="rect" id="node36" href="$structmlir_1_1linalg_1_1LinalgLoweringPattern.html" title="mlir::linalg::LinalgLowering\lPattern\&lt; OpTy \&gt;" alt="" coords="339,1069,514,1111"/>
<area shape="rect" id="node37" href="$structmlir_1_1OpRewritePattern.html" title="OpRewritePattern is a wrapper around RewritePattern that allows for matching and rewriting against an..." alt="" coords="349,1135,504,1176"/>
<area shape="rect" id="node38" href="$structmlir_1_1vector_1_1VectorTransferFullPartialRewriter.html" title="Apply splitFullAndPartialTransfer selectively via a pattern. " alt="" coords="336,1200,517,1241"/>
<area shape="rect" id="node39" href="$structmlir_1_1VectorTransferRewriter.html" title="Implements lowering of TransferReadOp and TransferWriteOp to a proper abstraction for the hardware..." alt="" coords="333,1265,520,1307"/>
<area shape="rect" id="node40" href="$structmlir_1_1OpRewritePattern.html" title="mlir::OpRewritePattern\l\&lt; AffineMinOp \&gt;" alt="" coords="349,1331,504,1372"/>
<area shape="rect" id="node42" href="$structmlir_1_1OpRewritePattern.html" title="mlir::OpRewritePattern\l\&lt; OpTy \&gt;" alt="" coords="349,1396,504,1437"/>
<area shape="rect" id="node44" href="$structmlir_1_1OpRewritePattern.html" title="mlir::OpRewritePattern\l\&lt; vector::ContractionOp \&gt;" alt="" coords="339,1461,514,1503"/>
<area shape="rect" id="node49" href="$structmlir_1_1OpRewritePattern.html" title="mlir::OpRewritePattern\l\&lt; vector::TransferReadOp \&gt;" alt="" coords="333,1592,520,1633"/>
<area shape="rect" id="node51" href="$structmlir_1_1OpRewritePattern.html" title="mlir::OpRewritePattern\l\&lt; vector::TransferWriteOp \&gt;" alt="" coords="333,1657,520,1699"/>
<area shape="rect" id="node5" href="$classmlir_1_1ConvertToLLVMPattern.html" title="Base class for operation conversions targeting the LLVM IR dialect. " alt="" coords="607,241,795,267"/>
<area shape="rect" id="node14" href="$structmlir_1_1OpConversionPattern.html" title="OpConversionPattern is a wrapper around ConversionPattern that allows for matching and rewriting agai..." alt="" coords="613,481,789,523"/>
<area shape="rect" id="node17" href="$structmlir_1_1OpConversionPattern.html" title="mlir::OpConversionPattern\l\&lt; CallOp \&gt;" alt="" coords="613,547,789,588"/>
<area shape="rect" id="node20" href="$structmlir_1_1OpConversionPattern.html" title="mlir::OpConversionPattern\l\&lt; FuncOp \&gt;" alt="" coords="613,612,789,653"/>
<area shape="rect" id="node23" href="$structmlir_1_1OpConversionPattern.html" title="mlir::OpConversionPattern\l\&lt; ReturnOpSourceTy \&gt;" alt="" coords="613,677,789,719"/>
<area shape="rect" id="node26" href="$structmlir_1_1OpConversionPattern.html" title="mlir::OpConversionPattern\l\&lt; SPIRVOp \&gt;" alt="" coords="613,743,789,784"/>
<area shape="rect" id="node6" href="$classmlir_1_1ConvertOpToLLVMPattern.html" title="mlir::ConvertOpToLLVMPattern\l\&lt; SourceOp \&gt;" alt="" coords="913,37,1119,79"/>
<area shape="rect" id="node9" href="$classmlir_1_1ConvertOpToLLVMPattern.html" title="Utility class for operation conversions targeting the LLVM dialect that match exactly one source oper..." alt="" coords="913,103,1119,144"/>
<area shape="rect" id="node10" href="$structmlir_1_1GPUFuncOpLowering.html" title="mlir::GPUFuncOpLowering\l\&lt; AllocaAddrSpace \&gt;" alt="" coords="927,168,1105,209"/>
<area shape="rect" id="node11" href="$structmlir_1_1GPUIndexIntrinsicOpLowering.html" title="mlir::GPUIndexIntrinsicOp\lLowering\&lt; Op, XOp, YOp, ZOp \&gt;" alt="" coords="908,233,1124,275"/>
<area shape="rect" id="node12" href="$structmlir_1_1GPUReturnOpLowering.html" title="mlir::GPUReturnOpLowering" alt="" coords="922,299,1110,326"/>
<area shape="rect" id="node13" href="$structmlir_1_1OpToFuncCallLowering.html" title="Rewriting that replace SourceOp with a CallOp to f32Func or f64Func depending on the element type tha..." alt="" coords="923,351,1109,392"/>
<area shape="rect" id="node7" href="$classmlir_1_1OneToOneConvertToLLVMPattern.html" title="Generic implementation of one&#45;to&#45;one conversion from &quot;SourceOp&quot; to &quot;TargetOp&quot; where the latter belong..." alt="" coords="1203,5,1453,47"/>
<area shape="rect" id="node8" href="$classmlir_1_1VectorConvertToLLVMPattern.html" title="Basic lowering implementation to rewrite Ops with just one result to the LLVM Dialect. " alt="" coords="1215,71,1441,112"/>
<area shape="rect" id="node15" href="$classmlir_1_1BufferAssignmentOpConversionPattern.html" title="Helper conversion pattern that encapsulates a BufferAssignmentPlacer instance. " alt="" coords="910,416,1122,457"/>
<area shape="rect" id="node16" href="$classmlir_1_1SPIRVOpLowering.html" title="Base class to define a conversion pattern to lower SourceOp into SPIR&#45;V. " alt="" coords="935,481,1097,523"/>
<area shape="rect" id="node18" href="$classmlir_1_1BufferAssignmentOpConversionPattern.html" title="mlir::BufferAssignmentOp\lConversionPattern\&lt; CallOp \&gt;" alt="" coords="919,547,1113,588"/>
<area shape="rect" id="node19" href="$classmlir_1_1detail_1_1BufferAssignmentCallOpConverter.html" title="Rewrites the CallOp to match its operands and results with the signature of the callee after rewritin..." alt="" coords="1201,525,1455,581"/>
<area shape="rect" id="node21" href="$classmlir_1_1BufferAssignmentOpConversionPattern.html" title="mlir::BufferAssignmentOp\lConversionPattern\&lt; FuncOp \&gt;" alt="" coords="916,612,1116,653"/>
<area shape="rect" id="node22" href="$classmlir_1_1detail_1_1BufferAssignmentFuncOpConverter.html" title="Converts the signature of the function based on whether the function is allowed to return memref type..." alt="" coords="1197,605,1459,661"/>
<area shape="rect" id="node24" href="$classmlir_1_1BufferAssignmentOpConversionPattern.html" title="mlir::BufferAssignmentOp\lConversionPattern\&lt; ReturnOpSourceTy \&gt;" alt="" coords="883,677,1149,719"/>
<area shape="rect" id="node25" href="$classmlir_1_1detail_1_1BufferAssignmentReturnOpConverter.html" title="Rewrites the ReturnOp to conform with the changed function signature. " alt="" coords="1206,685,1450,756"/>
<area shape="rect" id="node27" href="$classmlir_1_1SPIRVToLLVMConversion.html" title="mlir::SPIRVToLLVMConversion\l\&lt; SPIRVOp \&gt;" alt="" coords="913,743,1119,784"/>
<area shape="rect" id="node29" href="$structmlir_1_1linalg_1_1LinalgInterchangePattern.html" title="mlir::linalg::LinalgInterchange\lPattern\&lt; OpTy \&gt;" alt="" coords="606,808,797,849"/>
<area shape="rect" id="node31" href="$structmlir_1_1linalg_1_1LinalgPromotionPattern.html" title="mlir::linalg::LinalgPromotion\lPattern\&lt; OpTy \&gt;" alt="" coords="610,873,793,915"/>
<area shape="rect" id="node33" href="$structmlir_1_1linalg_1_1LinalgTilingPattern.html" title="mlir::linalg::LinalgTiling\lPattern\&lt; OpTy \&gt;" alt="" coords="624,939,779,980"/>
<area shape="rect" id="node35" href="$structmlir_1_1linalg_1_1LinalgVectorizationPattern.html" title="mlir::linalg::LinalgVectorization\lPattern\&lt; OpTy \&gt;" alt="" coords="602,1004,801,1045"/>
<area shape="rect" id="node41" href="$structmlir_1_1linalg_1_1AffineMinSCFCanonicalizationPattern.html" title="Canonicalize AffineMinOp operations in the context of enclosing scf.for and scf.parallel by: ..." alt="" coords="568,1245,835,1287"/>
<area shape="rect" id="node43" href="$structmlir_1_1vector_1_1UnrollVectorPattern.html" title="Pattern to apply unrollSingleResultVectorOp to a targetShape declaratively. " alt="" coords="618,1311,785,1352"/>
<area shape="rect" id="node45" href="$classmlir_1_1ContractionOpLowering.html" title="Progressive lowering of ContractionOp. " alt="" coords="608,1377,795,1403"/>
<area shape="rect" id="node46" href="$classmlir_1_1ContractionOpToDotLowering.html" title="Progressive lowering of a vector.contract a, b, c with row&#45;major matmul semantics to an output&#45;size&#45;u..." alt="" coords="616,1428,787,1469"/>
<area shape="rect" id="node47" href="$classmlir_1_1ContractionOpToMatmulOpLowering.html" title="Progressive lowering of a vector.contract a, b, c with row&#45;major matmul semantics to: %flattened_a = ..." alt="" coords="605,1493,798,1535"/>
<area shape="rect" id="node48" href="$classmlir_1_1ContractionOpToOuterProductOpLowering.html" title="Progressive lowering of a vector.contract a, b, c with row&#45;major matmul semantics to a reduction_size..." alt="" coords="610,1559,793,1600"/>
<area shape="rect" id="node50" href="$structmlir_1_1linalg_1_1LinalgCopyVTRForwardingPattern.html" title="Match and rewrite for the pattern: ``` alloc = ... " alt="" coords="624,1624,779,1665"/>
<area shape="rect" id="node52" href="$structmlir_1_1linalg_1_1LinalgCopyVTWForwardingPattern.html" title="Match and rewrite for the pattern: ``` alloc = ... " alt="" coords="622,1689,781,1731"/>
</map>
